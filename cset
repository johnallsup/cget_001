#!/usr/bin/env python
import sys
import os
import mysql.connector
import re
from icecream import ic; ic.configureOutput(includeContext=True)
from mysql.connector.errors import DatabaseError
from clipdb import HOST, USER, PASS, DB
try:
  from colors import color
except Exception:
  color = lambda t,*xs,**kw: t
if not sys.stdout.isatty():
  color = lambda x,*xs,**kw: x

def eprint(*xs,**kw):
  kw['file'] = sys.stderr
  print(*xs,**kw)

def exithelp(msg=None,retval=1):
  if msg is not None:
    eprint(msg)
  eprint(f"{sys.argv[0]} <name> <clipid>")
  exit(retval)

def getname(arg):
  if ":" in arg:
    namespace, name = arg.split(":",1)
    if namespace == "":
      namespace = os.getenv("CLIPNS","_")
  else:
    name = arg
    namespace = os.getenv("CLIPNS","_")
  return (namespace,name)

args = sys.argv[1:]

if len(args) != 2:
  exithelp("Wrong number of arguments")

arg, clipid = args
try:
  clipid = int(clipid)
except ValueError:
  exithelp("clip id is not an integer")
namespace, name = getname(arg)

try:
  mydb = mysql.connector.connect(host=HOST,user=USER,password=PASS,database=DB)
except DatabaseError as e:
  eprint(f"DatabaseError(connect): {e}")
  exit(1)

sql = "select id, name, time from history;"
sql_find = """SELECT id FROM clips
  WHERE (
    namespace = %s AND
    name = %s
  )"""
sql_set = """UPDATE pointers SET clipid = %s  WHERE namespace = %s AND name = %s"""

cursor = mydb.cursor()

cursor.execute(sql_find,(namespace,name))
a = cursor.fetchall()
a = [ x[0] for x in a ]
if len(a) == 0:
  eprint(f"No {arg} clips exist")
  exit(1)
if clipid not in a:
  eprint(f"Clip id does not match {arg}")
  exit(1)
print("yes",clipid)
cursor.execute(sql_set,(clipid,namespace,name))
mydb.commit()

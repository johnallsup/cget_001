#!/usr/bin/env python

"""
search using fulltext index
"""

import sys
import os
import mysql.connector
import re
from icecream import ic; ic.configureOutput(includeContext=True)
from mysql.connector.errors import DatabaseError
from clipdb import HOST, USER, PASS, DB
try:
  from colors import color
except Exception:
  color = lambda t,*xs,**kw: t
if not sys.stdout.isatty():
  color = lambda x,*xs,**kw: x

def eprint(*xs,**kw):
  kw['file'] = sys.stderr
  print(*xs,**kw)

args = sys.argv[1:]
if len(args) == 0:
  eprint(f"{sys.argv[0]} <pattern> [<pattern>...]")
  exit(1)

try:
  mydb = mysql.connector.connect(host=HOST,user=USER,password=PASS,database=DB)
except DatabaseError as e:
  eprint(f"DatabaseError(connect): {e}")
  exit(1)

sql = "select id, name, time from history;"
sql1 = """SELECT name FROM pointers WHERE namespace = %s"""
sql2 = """SELECT id, time FROM clips
  WHERE (
    namespace = %s AND
    name = %s
  )"""
clipns = os.getenv("CLIPNS",None) 
if clipns is not None:
  sql = """select id, namespace, name from clips 
    where match( value ) against ( %s ) and namespace = %s """
else:
  sql = "select id, namespace, name from clips where match( value ) against ( %s )"

cursor = mydb.cursor()
error = False
found = []
ln = 0
lns = 0
n = 0
matches = set()
for arg in args:
  if clipns is not None:
    cursor.execute(sql,(arg,clipns))
  else:
    cursor.execute(sql,(arg,))
  a = cursor.fetchall()
  for x in a:
    y = ":".join(str(y) for y in x)
    matches.add(y)
matches = list( x.split(":") for x in sorted(matches))
cll = [0,0,0]
for match in matches:
  for i in range(3):
    cll[i] = max(cll[i],len(match[i]))
lcl,lns,ln = cll
def cpad(x,n,**kw):
  m = n - len(x)
  if m > 0:
    p = " "*m
  else:
    p = ""
  return color(x,**kw),p
for match in matches:
  clipid, namespace, name = match
  c,p = cpad(clipid,lcl,fg="#7777ff")
  c = p + c
  ns, p = cpad(namespace,lns,fg="#ff7777")
  ns = p + ns
  n, p = cpad(name,ln,fg="#77ff77")
  n = n + p
  print(f"{c} {ns}:{n}")

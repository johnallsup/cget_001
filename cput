#!/usr/bin/env python
import sys
import os
import re
import mysql.connector
from icecream import ic; ic.configureOutput(includeContext=True)
from mysql.connector.errors import DatabaseError
from clipdb import HOST, USER, PASS, DB

def eprint(*xs,**kw):
  kw['file'] = sys.stderr
  print(*xs,**kw)

args = sys.argv[1:]
if len(args) == 0:
  eprint(f"{sys.argv[0]} <name> [content filenames]")
  eprint(f"filename - reads from stdin")
  exit(1)
name, *args = args
if ":" in name:
  namespace, name = name.split(":",1)
else:
  namespace = os.getenv("CLIPNS","_")

if not re.match(r"^[A-Za-z0-9_]+$",name):
  eprint(f"Invalid name: {name}")
  exit(1)
if not re.match(r"^[A-Za-z0-9_]+$",namespace):
  eprint(f"Invalid namespace: {namespace}")
  exit(1)

if len(args) == 0:
  args = ["-"]

stdin = None
contents = []
for arg in args:
  if arg == "-":
    if stdin is None:
      stdin = sys.stdin.read()
    contents.append(stdin)
  else:
    try:
      with open(arg) as f:
        contents.append(f.read())
    except Exception:
      eprint(f"#Fail {arg}")
      exit(1)

content = "\n\n".join(contents)
content = content.replace("\r","")
try:
  mydb = mysql.connector.connect(host=HOST,user=USER,password=PASS,database=DB)
except DatabaseError as e:
  eprint(f"DatabaseError(connect): {e}")
  exit(1)

def f(sql,values=None):
  #print(sql,values)
  if values is not None:
    cursor.execute(sql,values)
  else:
    cursor.execute(sql)
  #print("done")

cursor = mydb.cursor()
f("START TRANSACTION")
f("""INSERT INTO clips 
  (namespace,name,value) VALUES ( %s, %s, %s )""",
  (namespace,name,content))
f("""SET @a = (SELECT LAST_INSERT_ID())""")
f("""INSERT INTO pointers (namespace,name,clipid) 
  VALUES ( %s, %s, @a )
  ON DUPLICATE KEY UPDATE clipid=(@a)""",
  (namespace,name))
f("""COMMIT""")
mydb.commit()

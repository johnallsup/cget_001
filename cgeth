#!/usr/bin/env python
import sys
import os
import mysql.connector
from icecream import ic; ic.configureOutput(includeContext=True)
from mysql.connector.errors import DatabaseError
from clipdb import HOST, USER, PASS, DB

def eprint(*xs,**kw):
  kw['file'] = sys.stderr
  print(*xs,**kw)

def helpexit(msg=None,retval=1):
  if msg is not None:
    eprint(msg)
  eprint(f"{sys.argv[0]} <name> <index> [<offset>...]")
  eprint(f"if index not specified, prints the number of clips under a given name")
  exit(retval)

def getname(arg):
  if ":" in arg:
    namespace, name = arg.split(":",1)
  else:
    name = arg
    namespace = os.getenv("CLIPNS","_")
  return (namespace,name)

args = sys.argv[1:]
if len(args) < 1:
  helpexit("too few arguments")

try:
  arg, *args = args
  args = [ int(x) for x in args ]
except ValueError:
  helpexit("Invalid arguments, indices must be integers")
namespace, name = getname(arg)
  
try:
  mydb = mysql.connector.connect(host=HOST,user=USER,password=PASS,database=DB)
except DatabaseError as e:
  eprint(f"DatabaseError(connect): {e}")
  exit(1)

sql_find = """SELECT id FROM clips WHERE namespace = %s AND name = %s ORDER BY time"""
sql_get = """SELECT value FROM clips WHERE id = %s"""

cursor = mydb.cursor()
error = False
cursor.execute(sql_find,(namespace,name))
clipids = [ x[0] for x in cursor.fetchall() ]
if len(args) > 0:
  for arg in args:
    try:
      clipid = clipids[arg]
      cursor.execute(sql_get,(clipid,))
      val = cursor.fetchall()[0][0]
      print(val,end="")
    except Exception:
      eprint(f"Failed to get {arg} for {name}")
      error = True
else:
  print(len(clipids))

exit(1 if error else 0)
